/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ECommerceProgram as PrismaECommerceProgram,
} from "@prisma/client";

export class ECommerceProgramServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ECommerceProgramCountArgs, "select">
  ): Promise<number> {
    return this.prisma.eCommerceProgram.count(args);
  }

  async eCommercePrograms<T extends Prisma.ECommerceProgramFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ECommerceProgramFindManyArgs>
  ): Promise<PrismaECommerceProgram[]> {
    return this.prisma.eCommerceProgram.findMany<Prisma.ECommerceProgramFindManyArgs>(
      args
    );
  }
  async eCommerceProgram<T extends Prisma.ECommerceProgramFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ECommerceProgramFindUniqueArgs>
  ): Promise<PrismaECommerceProgram | null> {
    return this.prisma.eCommerceProgram.findUnique(args);
  }
  async createECommerceProgram<T extends Prisma.ECommerceProgramCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ECommerceProgramCreateArgs>
  ): Promise<PrismaECommerceProgram> {
    return this.prisma.eCommerceProgram.create<T>(args);
  }
  async updateECommerceProgram<T extends Prisma.ECommerceProgramUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ECommerceProgramUpdateArgs>
  ): Promise<PrismaECommerceProgram> {
    return this.prisma.eCommerceProgram.update<T>(args);
  }
  async deleteECommerceProgram<T extends Prisma.ECommerceProgramDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ECommerceProgramDeleteArgs>
  ): Promise<PrismaECommerceProgram> {
    return this.prisma.eCommerceProgram.delete(args);
  }
}
