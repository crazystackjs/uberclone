/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, FoodDelivery as PrismaFoodDelivery } from "@prisma/client";

export class FoodDeliveryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FoodDeliveryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.foodDelivery.count(args);
  }

  async foodDeliveries<T extends Prisma.FoodDeliveryFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.FoodDeliveryFindManyArgs>
  ): Promise<PrismaFoodDelivery[]> {
    return this.prisma.foodDelivery.findMany<Prisma.FoodDeliveryFindManyArgs>(
      args
    );
  }
  async foodDelivery<T extends Prisma.FoodDeliveryFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.FoodDeliveryFindUniqueArgs>
  ): Promise<PrismaFoodDelivery | null> {
    return this.prisma.foodDelivery.findUnique(args);
  }
  async createFoodDelivery<T extends Prisma.FoodDeliveryCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FoodDeliveryCreateArgs>
  ): Promise<PrismaFoodDelivery> {
    return this.prisma.foodDelivery.create<T>(args);
  }
  async updateFoodDelivery<T extends Prisma.FoodDeliveryUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FoodDeliveryUpdateArgs>
  ): Promise<PrismaFoodDelivery> {
    return this.prisma.foodDelivery.update<T>(args);
  }
  async deleteFoodDelivery<T extends Prisma.FoodDeliveryDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.FoodDeliveryDeleteArgs>
  ): Promise<PrismaFoodDelivery> {
    return this.prisma.foodDelivery.delete(args);
  }
}
