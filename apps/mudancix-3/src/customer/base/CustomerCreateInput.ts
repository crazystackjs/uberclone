/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, ValidateNested, IsOptional } from "class-validator";
import { ChatCreateNestedManyWithoutCustomersInput } from "./ChatCreateNestedManyWithoutCustomersInput";
import { Type } from "class-transformer";
import { MoveCreateNestedManyWithoutCustomersInput } from "./MoveCreateNestedManyWithoutCustomersInput";
import { PaymentCreateNestedManyWithoutCustomersInput } from "./PaymentCreateNestedManyWithoutCustomersInput";

@InputType()
class CustomerCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  address!: string;

  @ApiProperty({
    required: false,
    type: () => ChatCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => ChatCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => ChatCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  chats?: ChatCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  email!: string;

  @ApiProperty({
    required: false,
    type: () => MoveCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => MoveCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => MoveCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  moves?: MoveCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => PaymentCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => PaymentCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => PaymentCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  payments?: PaymentCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  phoneNumber!: string;
}

export { CustomerCreateInput as CustomerCreateInput };
