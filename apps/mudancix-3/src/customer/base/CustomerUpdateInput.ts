/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { ChatUpdateManyWithoutCustomersInput } from "./ChatUpdateManyWithoutCustomersInput";
import { Type } from "class-transformer";
import { MoveUpdateManyWithoutCustomersInput } from "./MoveUpdateManyWithoutCustomersInput";
import { PaymentUpdateManyWithoutCustomersInput } from "./PaymentUpdateManyWithoutCustomersInput";

@InputType()
class CustomerUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string;

  @ApiProperty({
    required: false,
    type: () => ChatUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => ChatUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => ChatUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  chats?: ChatUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string;

  @ApiProperty({
    required: false,
    type: () => MoveUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => MoveUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => MoveUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  moves?: MoveUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: () => PaymentUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => PaymentUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => PaymentUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  payments?: PaymentUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string;
}

export { CustomerUpdateInput as CustomerUpdateInput };
