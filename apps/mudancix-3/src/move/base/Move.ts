/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Budget } from "../../budget/base/Budget";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  IsNumber,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { CostSimulation } from "../../costSimulation/base/CostSimulation";
import { Customer } from "../../customer/base/Customer";
import { Driver } from "../../driver/base/Driver";
import { GpsDatum } from "../../gpsDatum/base/GpsDatum";
import { Payment } from "../../payment/base/Payment";
import { Route } from "../../route/base/Route";
import { EnumMoveStatus } from "./EnumMoveStatus";

@ObjectType()
class Move {
  @ApiProperty({
    required: false,
    type: () => Budget,
  })
  @ValidateNested()
  @Type(() => Budget)
  @IsOptional()
  budget?: Budget | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  completedAt!: Date | null;

  @ApiProperty({
    required: false,
    type: () => [CostSimulation],
  })
  @ValidateNested()
  @Type(() => CostSimulation)
  @IsOptional()
  costSimulation?: Array<CostSimulation>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: () => Customer,
  })
  @ValidateNested()
  @Type(() => Customer)
  customer?: Customer;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  deliveryLocation!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Number)
  distance!: number;

  @ApiProperty({
    required: false,
    type: () => Driver,
  })
  @ValidateNested()
  @Type(() => Driver)
  @IsOptional()
  driver?: Driver | null;

  @ApiProperty({
    required: false,
    type: () => [GpsDatum],
  })
  @ValidateNested()
  @Type(() => GpsDatum)
  @IsOptional()
  gpsData?: Array<GpsDatum>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => [Payment],
  })
  @ValidateNested()
  @Type(() => Payment)
  @IsOptional()
  payments?: Array<Payment>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  pickupLocation!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Number)
  price!: number;

  @ApiProperty({
    required: false,
    type: () => Route,
  })
  @ValidateNested()
  @Type(() => Route)
  @IsOptional()
  route?: Route | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  scheduledAt!: Date;

  @ApiProperty({
    required: true,
    enum: EnumMoveStatus,
  })
  @IsEnum(EnumMoveStatus)
  @Field(() => EnumMoveStatus, {
    nullable: true,
  })
  status?: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELED";

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Number)
  volume!: number;
}

export { Move as Move };
