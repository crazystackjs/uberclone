/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, ValidateNested, IsOptional, IsEnum } from "class-validator";
import { RatingCreateNestedManyWithoutUsersInput } from "./RatingCreateNestedManyWithoutUsersInput";
import { Type } from "class-transformer";
import { EnumUserRole } from "./EnumUserRole";
import { SupportTicketCreateNestedManyWithoutUsersInput } from "./SupportTicketCreateNestedManyWithoutUsersInput";

@InputType()
class UserCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  email!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  password!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  phoneNumber!: string;

  @ApiProperty({
    required: false,
    type: () => RatingCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => RatingCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => RatingCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  ratingsGiven?: RatingCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => RatingCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => RatingCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => RatingCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  ratingsReceived?: RatingCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: true,
    enum: EnumUserRole,
  })
  @IsEnum(EnumUserRole)
  @Field(() => EnumUserRole)
  role!: "ADMIN" | "DRIVER" | "CUSTOMER";

  @ApiProperty({
    required: false,
    type: () => SupportTicketCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => SupportTicketCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => SupportTicketCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  supportTicket?: SupportTicketCreateNestedManyWithoutUsersInput;
}

export { UserCreateInput as UserCreateInput };
