/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DiscountCreateNestedManyWithoutCustomersInput } from "./DiscountCreateNestedManyWithoutCustomersInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { FeedbackCreateNestedManyWithoutCustomersInput } from "./FeedbackCreateNestedManyWithoutCustomersInput";
import { MoveCreateNestedManyWithoutCustomersInput } from "./MoveCreateNestedManyWithoutCustomersInput";
import { NotificationCreateNestedManyWithoutCustomersInput } from "./NotificationCreateNestedManyWithoutCustomersInput";

@InputType()
class CustomerCreateInput {
  @ApiProperty({
    required: false,
    type: () => DiscountCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => DiscountCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => DiscountCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  discount?: DiscountCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  email!: string;

  @ApiProperty({
    required: false,
    type: () => FeedbackCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => FeedbackCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => FeedbackCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  feedbacks?: FeedbackCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  firstName!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  lastName!: string;

  @ApiProperty({
    required: false,
    type: () => MoveCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => MoveCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => MoveCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  moves?: MoveCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: () => NotificationCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => NotificationCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => NotificationCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  notification?: NotificationCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  password!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  phone!: string;
}

export { CustomerCreateInput as CustomerCreateInput };
