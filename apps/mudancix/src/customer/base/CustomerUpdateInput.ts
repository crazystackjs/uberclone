/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DiscountUpdateManyWithoutCustomersInput } from "./DiscountUpdateManyWithoutCustomersInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { FeedbackUpdateManyWithoutCustomersInput } from "./FeedbackUpdateManyWithoutCustomersInput";
import { MoveUpdateManyWithoutCustomersInput } from "./MoveUpdateManyWithoutCustomersInput";
import { NotificationUpdateManyWithoutCustomersInput } from "./NotificationUpdateManyWithoutCustomersInput";

@InputType()
class CustomerUpdateInput {
  @ApiProperty({
    required: false,
    type: () => DiscountUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => DiscountUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => DiscountUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  discount?: DiscountUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string;

  @ApiProperty({
    required: false,
    type: () => FeedbackUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => FeedbackUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => FeedbackUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  feedbacks?: FeedbackUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string;

  @ApiProperty({
    required: false,
    type: () => MoveUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => MoveUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => MoveUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  moves?: MoveUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: () => NotificationUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => NotificationUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => NotificationUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  notification?: NotificationUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string;
}

export { CustomerUpdateInput as CustomerUpdateInput };
